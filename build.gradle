import com.badlogic.gdx.tools.texturepacker.TexturePacker

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.badlogicgames.gdx:gdx-tools:1.7.0'
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "GigaGal"
        gdxVersion = '1.7.0'
        roboVMVersion = '1.8.0'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.6.0'
        aiVersion = '1.6.0'
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}

project(":android") {
    apply plugin: "android"

    configurations { natives }

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
    }
}

project(":core") {
    apply plugin: "java"


    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"

        // We also had to do some shenanigans to prevent a version conflict
        compile ('com.googlecode.json-simple:json-simple:1.1.1') {
            exclude module: 'junit'
        }
    }


    task packTextures {
        def inputDir1 = "$rootDir/core/rawAssets/sprites"
        def inputDir2 = "$rootDir/core/rawAssets/backgrounds"
        def outputDir = "$rootDir/android/assets/images"
        inputs.dir inputDir1
        inputs.dir inputDir2
        outputs.dir outputDir
        doLast {
            delete(outputDir)
            TexturePacker.process(inputDir1, outputDir, "gigagal.pack")
            TexturePacker.process(inputDir2, outputDir, "background.pack")
        }
    }

    task copyLevels(type: Copy){
        from "../levels"
        into "../android/assets/levels"
    }

    project.tasks.compileJava.dependsOn packTextures
    project.tasks.compileJava.dependsOn copyLevels

}

tasks.eclipse.doLast {
    delete ".project"
}